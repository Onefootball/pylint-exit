#!/usr/local/bin/python
import sys
from bitarray import bitarray

EXIT_CODES_LIST = [
    (1, 'fatal message issued', 1),
    (2, 'error message issued', 0),
    (4, 'warning message issued', 0),
    (8, 'refactor message issued', 0),
    (16, 'convention message issued', 0),
    (32, 'usage error', 1)
    ]

def decode(value):
    return [x[1] for x in zip(bitarray(bin(value)[2:])[::-1], EXIT_CODES_LIST) if x[0]]

def get_messages(value):
    return [x[1] for x in decode(value)]

def get_exit_code(value):
    exit_codes = [x[2] for x in decode(value)]
    if not exit_codes:
        return 0
    else:
        return max(exit_codes)

def show_workings(value):
    print "%s (%s) = %s" % (value, bin(value)[2:], [x[1][1] for x in zip(bitarray(bin(value)[2:])[::-1], EXIT_CODES_LIST) if x[0]])


if __name__ == '__main__':
    value = int(sys.argv[1])
    messages = get_messages(value)
    exit_code = get_exit_code(value)

    if messages:
        print "The following messages were raised:"
        print

    for m in messages:
        print "  - %s" % m

    if messages:
        print

    if exit_code:
        print "Fatal messages detected.  Failing..."
    else:
        print "No fatal messages detected.  Exiting gracefully..."

    sys.exit(exit_code)
